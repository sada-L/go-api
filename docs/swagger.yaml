basePath: /
definitions:
  handlers.TokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  models.User:
    properties:
      age:
        example: 10
        type: integer
      id:
        type: integer
      name:
        example: Bill
        type: string
    type: object
  utils.Error:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: Server for a user management API.
  title: GO API
  version: "1.0"
paths:
  /api/v1/image/:
    post:
      consumes:
      - multipart/form-data
      description: Загружает выбранное изображение.
      parameters:
      - description: Image file
        in: formData
        name: file
        required: true
        type: file
      - description: '''Bearer _YOUR_TOKEN_'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Image ID
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - Bearer Authentication: []
      summary: Загрузить изображение.
      tags:
      - Image
  /api/v1/image/{id}:
    delete:
      consumes:
      - multipart/form-data
      description: Удаляет изображение по ID.
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      - description: '''Bearer _YOUR_TOKEN_'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Image deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - Bearer Authentication: []
      summary: Удалить изображение по ID.
      tags:
      - Image
    get:
      description: Возвращает изображение по ID.
      parameters:
      - description: '''Bearer _YOUR_TOKEN_'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Image received
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - Bearer Authentication: []
      summary: Получить изображение по ID.
      tags:
      - Image
  /api/v1/user:
    get:
      description: Возвращает список всех пользователей.
      parameters:
      - description: '''Bearer _YOUR_TOKEN_'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - Bearer Authentication: []
      summary: Получить всех пользователей.
      tags:
      - User
    post:
      description: Создает нового пользователя.
      parameters:
      - description: '''Bearer _YOUR_TOKEN_'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Created ID
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - Bearer Authentication: []
      summary: Создание пользователя.
      tags:
      - User
    put:
      description: Обновляет пользователя.
      parameters:
      - description: '''Bearer _YOUR_TOKEN_'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Updated ID
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - Bearer Authentication: []
      summary: Обновить пользователся.
      tags:
      - User
  /api/v1/user/{id}:
    delete:
      description: Удаляет пользователя по ID.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      - description: '''Bearer _YOUR_TOKEN_'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - Bearer Authentication: []
      summary: Удалить пользователся по ID.
      tags:
      - User
    get:
      description: Возвращает пользователя по ID.
      parameters:
      - description: '''Bearer _YOUR_TOKEN_'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - Bearer Authentication: []
      summary: Получить пользователя по ID.
      tags:
      - User
  /login:
    post:
      description: Авторизация по логину и паролю.
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: JWT tokens
          schema:
            $ref: '#/definitions/handlers.TokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Авторизация.
      tags:
      - Auth
  /refresh:
    post:
      description: Обновляет токен досутпа с помощью токена обновления.
      parameters:
      - description: '''Bearer refresh_token'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: JWT tokens
          schema:
            $ref: '#/definitions/handlers.TokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - Bearer Authentication: []
      summary: Обновление доступа.
      tags:
      - Auth
schemes:
- http
swagger: "2.0"
